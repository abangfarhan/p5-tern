{
  "!name": "p5.dom.js",
  "!define": {
    "p5" : {
      "MediaElement": {
        "!type": "fn(elt: string) -> +p5.dom.p5.MediaElement",
        "!doc": "Extends p5.Element to handle audio and video. In addition to the methods\nof p5.Element, it also contains methods for controlling media. It is not\ncalled directly, but p5.MediaElements are created by calling createVideo,\ncreateAudio, and createCapture.\n",
        "!url": "https://p5js.org/reference/#/p5/p5.MediaElement",
        "prototype": {
          "src": {
            "!type": "?",
            "!doc": "Path to the media element source.\n",
            "!url": "https://p5js.org/reference/#/p5/src"
          },
          "play": {
            "!type": "fn() -> +p5.Element",
            "!doc": "Play an HTML5 media element.\n",
            "!url": "https://p5js.org/reference/#/p5/play"
          },
          "stop": {
            "!type": "fn() -> +p5.Element",
            "!doc": "Stops an HTML5 media element (sets current time to zero).\n",
            "!url": "https://p5js.org/reference/#/p5/stop"
          },
          "pause": {
            "!type": "fn() -> +p5.Element",
            "!doc": "Pauses an HTML5 media element.\n",
            "!url": "https://p5js.org/reference/#/p5/pause"
          },
          "loop": {
            "!type": "fn() -> +p5.Element",
            "!doc": "Set &#39;loop&#39; to true for an HTML5 media element, and starts playing.\n",
            "!url": "https://p5js.org/reference/#/p5/loop"
          },
          "noLoop": {
            "!type": "fn() -> +p5.Element",
            "!doc": "Set &#39;loop&#39; to false for an HTML5 media element. Element will stop\nwhen it reaches the end.\n",
            "!url": "https://p5js.org/reference/#/p5/noLoop"
          },
          "autoplay": {
            "!type": "fn(autoplay: bool) -> +p5.Element",
            "!doc": "Set HTML5 media element to autoplay or not.\n",
            "!url": "https://p5js.org/reference/#/p5/autoplay"
          },
          "volume": {
            "!type": "fn(val?: number) -> number",
            "!doc": "Sets volume for this HTML5 media element. If no argument is given,\nreturns the current volume.\n",
            "!url": "https://p5js.org/reference/#/p5/volume"
          },
          "speed": {
            "!type": "fn(speed?: number) -> number",
            "!doc": "If no arguments are given, returns the current playback speed of the\nelement. The speed parameter sets the speed where 2.0 will play the\nelement twice as fast, 0.5 will play at half the speed, and -1 will play\nthe element in normal speed in reverse.(Note that not all browsers support\nbackward playback and even if they do, playback might not be smooth.)\n",
            "!url": "https://p5js.org/reference/#/p5/speed"
          },
          "time": {
            "!type": "fn(time?: number) -> number",
            "!doc": "If no arguments are given, returns the current time of the element.\nIf an argument is given the current time of the element is set to it.\n",
            "!url": "https://p5js.org/reference/#/p5/time"
          },
          "duration": {
            "!type": "fn() -> number",
            "!doc": "Returns the duration of the HTML5 media element.\n",
            "!url": "https://p5js.org/reference/#/p5/duration"
          },
          "onended": {
            "!type": "fn(callback: fn()) -> +p5.MediaElement",
            "!doc": "Schedule an event to be called when the audio or video\nelement reaches the end. If the element is looping,\nthis will not be called. The element is passed in\nas the argument to the onended callback.\n",
            "!url": "https://p5js.org/reference/#/p5/onended"
          },
          "connect": {
            "!type": "fn(audioNode: AudioNode)",
            "!doc": "Send the audio output of this element to a specified audioNode or\np5.sound object. If no element is provided, connects to p5&#39;s master\noutput. That connection is established when this method is first called.\nAll connections are removed by the .disconnect() method.\nThis method is meant to be used with the p5.sound.js addon library.\n",
            "!url": "https://p5js.org/reference/#/p5/connect"
          },
          "disconnect": {
            "!type": "fn()",
            "!doc": "Disconnect all Web Audio routing, including to master output.\nThis is useful if you want to re-route the output through\naudio effects, for example.\n",
            "!url": "https://p5js.org/reference/#/p5/disconnect"
          },
          "showControls": {
            "!type": "fn()",
            "!doc": "Show the default MediaElement controls, as determined by the web browser.\n",
            "!url": "https://p5js.org/reference/#/p5/showControls"
          },
          "hideControls": {
            "!type": "fn()",
            "!doc": "Hide the default mediaElement controls.\n",
            "!url": "https://p5js.org/reference/#/p5/hideControls"
          },
          "addCue": {
            "!type": "fn(time: number, callback: fn(), value?: Object) -> number",
            "!doc": "Schedule events to trigger every time a MediaElement\n(audio/video) reaches a playback cue point.\nAccepts a callback function, a time (in seconds) at which to trigger\nthe callback, and an optional parameter for the callback.\nTime will be passed as the first parameter to the callback function,\nand param will be the second parameter.\n",
            "!url": "https://p5js.org/reference/#/p5/addCue"
          },
          "removeCue": {
            "!type": "fn(id: number)",
            "!doc": "Remove a callback based on its ID. The ID is returned by the\naddCue method.\n",
            "!url": "https://p5js.org/reference/#/p5/removeCue"
          },
          "clearCues": {
            "!type": "fn()",
            "!doc": "Remove all of the callbacks that had originally been scheduled\nvia the addCue method.\n",
            "!url": "https://p5js.org/reference/#/p5/clearCues"
          }
        }
      },
      "File": {
        "!type": "fn(file: File) -> +p5.dom.p5.File",
        "!doc": "Base class for a file\nUsing this for createFileInput\n",
        "!url": "https://p5js.org/reference/#/p5/p5.File",
        "prototype": {
          "file": {
            "!type": "?",
            "!doc": "Underlying File object. All normal File methods can be called on this.\n",
            "!url": "https://p5js.org/reference/#/p5/file"
          },
          "type": {
            "!type": "?",
            "!doc": "File type (image, text, etc.)\n",
            "!url": "https://p5js.org/reference/#/p5/type"
          },
          "subtype": {
            "!type": "?",
            "!doc": "File subtype (usually the file extension jpg, png, xml, etc.)\n",
            "!url": "https://p5js.org/reference/#/p5/subtype"
          },
          "name": {
            "!type": "?",
            "!doc": "File name\n",
            "!url": "https://p5js.org/reference/#/p5/name"
          },
          "size": {
            "!type": "?",
            "!doc": "File size\n",
            "!url": "https://p5js.org/reference/#/p5/size"
          },
          "data": {
            "!type": "?",
            "!doc": "URL string containing image data.\n",
            "!url": "https://p5js.org/reference/#/p5/data"
          }
        }
      }
    }
  },

  "select": {
    "!type": "fn(name: string, container?: string) -> +p5.Element",
    "!doc": "Searches the page for an element with the given ID, class, or tag name (using the &#39;#&#39; or &#39;.&#39;\nprefixes to specify an ID or class respectively, and none for a tag) and returns it as\na p5.Element. If a class or tag name is given with more than 1 element,\nonly the first element will be returned.\nThe DOM node itself can be accessed with .elt.\nReturns null if none found. You can also specify a container to search within.\n",
    "!url": "https://p5js.org/reference/#/p5/select"
  },
  "selectAll": {
    "!type": "fn(name: string, container?: string) -> [+p5.Element]",
    "!doc": "Searches the page for elements with the given class or tag name (using the &#39;.&#39; prefix\nto specify a class and no prefix for a tag) and returns them as p5.Elements\nin an array.\nThe DOM node itself can be accessed with .elt.\nReturns an empty array if none found.\nYou can also specify a container to search within.\n",
    "!url": "https://p5js.org/reference/#/p5/selectAll"
  },
  "removeElements": {
    "!type": "fn()",
    "!doc": "Removes all elements created by p5, except any canvas / graphics\nelements created by createCanvas or createGraphics.\nEvent handlers are removed, and element is removed from the DOM.\n",
    "!url": "https://p5js.org/reference/#/p5/removeElements"
  },
  "createDiv": {
    "!type": "fn(html?: string) -> +p5.Element",
    "!doc": "Creates a &lt;div&gt;&lt;/div&gt; element in the DOM with given inner HTML.\nAppends to the container node if one is specified, otherwise\nappends to body.\n",
    "!url": "https://p5js.org/reference/#/p5/createDiv"
  },
  "createP": {
    "!type": "fn(html?: string) -> +p5.Element",
    "!doc": "Creates a &lt;p&gt;&lt;/p&gt; element in the DOM with given inner HTML. Used\nfor paragraph length text.\nAppends to the container node if one is specified, otherwise\nappends to body.\n",
    "!url": "https://p5js.org/reference/#/p5/createP"
  },
  "createSpan": {
    "!type": "fn(html?: string) -> +p5.Element",
    "!doc": "Creates a &lt;span&gt;&lt;/span&gt; element in the DOM with given inner HTML.\nAppends to the container node if one is specified, otherwise\nappends to body.\n",
    "!url": "https://p5js.org/reference/#/p5/createSpan"
  },
  "createImg": {
    "!type": "fn(src: string, alt?: string, successCallback?: fn()) -> +p5.Element",
    "!doc": "Creates an &lt;img&gt; element in the DOM with given src and\nalternate text.\nAppends to the container node if one is specified, otherwise\nappends to body.\n",
    "!url": "https://p5js.org/reference/#/p5/createImg"
  },
  "createA": {
    "!type": "fn(href: string, html: string, target?: string) -> +p5.Element",
    "!doc": "Creates an &lt;a&gt;&lt;/a&gt; element in the DOM for including a hyperlink.\nAppends to the container node if one is specified, otherwise\nappends to body.\n",
    "!url": "https://p5js.org/reference/#/p5/createA"
  },
  "createSlider": {
    "!type": "fn(min: number, max: number, value?: number, step?: number) -> +p5.Element",
    "!doc": "Creates a slider &lt;input&gt;&lt;/input&gt; element in the DOM.\nUse .size() to set the display length of the slider.\nAppends to the container node if one is specified, otherwise\nappends to body.\n",
    "!url": "https://p5js.org/reference/#/p5/createSlider"
  },
  "createButton": {
    "!type": "fn(label: string, value?: string) -> +p5.Element",
    "!doc": "Creates a &lt;button&gt;&lt;/button&gt; element in the DOM.\nUse .size() to set the display size of the button.\nUse .mousePressed() to specify behavior on press.\nAppends to the container node if one is specified, otherwise\nappends to body.\n",
    "!url": "https://p5js.org/reference/#/p5/createButton"
  },
  "createCheckbox": {
    "!type": "fn(label?: string, value?: bool) -> +p5.Element",
    "!doc": "Creates a checkbox &lt;input&gt;&lt;/input&gt; element in the DOM.\nCalling .checked() on a checkbox returns if it is checked or not\n",
    "!url": "https://p5js.org/reference/#/p5/createCheckbox"
  },
  "createSelect": {
    "!type": "fn() -> +p5.Element",
    "!doc": "Creates a dropdown menu &lt;select&gt;&lt;/select&gt; element in the DOM.\nIt also helps to assign select-box methods to p5.Element when selecting existing select box\n",
    "!url": "https://p5js.org/reference/#/p5/createSelect"
  },
  "createRadio": {
    "!type": "fn(divId?: string) -> +p5.Element",
    "!doc": "Creates a radio button &lt;input&gt;&lt;/input&gt; element in the DOM.\nThe .option() method can be used to set options for the radio after it is\ncreated. The .value() method will return the currently selected option.\n",
    "!url": "https://p5js.org/reference/#/p5/createRadio"
  },
  "createInput": {
    "!type": "fn(value?: number, type?: string) -> +p5.Element",
    "!doc": "Creates an &lt;input&gt;&lt;/input&gt; element in the DOM for text input.\nUse .size() to set the display length of the box.\nAppends to the container node if one is specified, otherwise\nappends to body.\n",
    "!url": "https://p5js.org/reference/#/p5/createInput"
  },
  "createFileInput": {
    "!type": "fn(callback?: fn(), multiple?: string) -> +p5.Element",
    "!doc": "Creates an &lt;input&gt;&lt;/input&gt; element in the DOM of type &#39;file&#39;.\nThis allows users to select local files for use in a sketch.\n",
    "!url": "https://p5js.org/reference/#/p5/createFileInput"
  },
  "createVideo": {
    "!type": "fn(src: string, callback?: Object) -> +p5.MediaElement",
    "!doc": "Creates an HTML5 &lt;video&gt; element in the DOM for simple playback\nof audio/video. Shown by default, can be hidden with .hide()\nand drawn into canvas using video(). Appends to the container\nnode if one is specified, otherwise appends to body. The first parameter\ncan be either a single string path to a video file, or an array of string\npaths to different formats of the same video. This is useful for ensuring\nthat your video can play across different browsers, as each supports\ndifferent formats. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats\">this\npage</a> for further information about supported formats.\n",
    "!url": "https://p5js.org/reference/#/p5/createVideo"
  },
  "createAudio": {
    "!type": "fn(src: string, callback?: Object) -> +p5.MediaElement",
    "!doc": "Creates a hidden HTML5 &lt;audio&gt; element in the DOM for simple audio\nplayback. Appends to the container node if one is specified,\notherwise appends to body. The first parameter\ncan be either a single string path to a audio file, or an array of string\npaths to different formats of the same audio. This is useful for ensuring\nthat your audio can play across different browsers, as each supports\ndifferent formats. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats\">this\npage for further information about supported formats</a>.\n",
    "!url": "https://p5js.org/reference/#/p5/createAudio"
  },
  "createCapture": {
    "!type": "fn(type: string, callback: fn()) -> +p5.Element",
    "!doc": "Creates a new &lt;video&gt; element that contains the audio/video feed\nfrom a webcam. This can be drawn onto the canvas using video().\nMore specific properties of the feed can be passing in a Constraints object.\nSee the\n<a href=\"http://w3c.github.io/mediacapture-main/getusermedia.html#media-track-constraints\"> W3C\nspec</a> for possible properties. Note that not all of these are supported\nby all browsers.\nSecurity note: A new browser security specification requires that getUserMedia,\nwhich is behind createCapture(), only works when you&#39;re running the code locally,\nor on HTTPS. Learn more <a href=\"http://stackoverflow.com/questions/34197653/getusermedia-in-chrome-47-without-using-https\">here</a>\nand <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\">here</a>.",
    "!url": "https://p5js.org/reference/#/p5/createCapture"
  },
  "createElement": {
    "!type": "fn(tag: string, content?: string) -> +p5.Element",
    "!doc": "Creates element with given tag in the DOM with given content.\nAppends to the container node if one is specified, otherwise\nappends to body.\n",
    "!url": "https://p5js.org/reference/#/p5/createElement"
  }
}
